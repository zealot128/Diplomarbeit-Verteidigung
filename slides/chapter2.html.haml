%section.slide.toc#theoretisch
  %h1 Theoretische Grundlagen

%section.slide
  %h2.subtitle
    Testgetriebene Entwicklung
    %br
    von Webserver-Anwendungen
    %br
    auf Basis von <u>Ruby on Rails</u>

%section.slide
  %h1 Ruby &amp; Rails

%section.slide.toc
  %h2 Ruby
  = image_tag_with_caption "imgs/ruby.gif",  "ruby-lang.org", "side-image"
  %ul
    %li Yukihiro Matsumoto, 1995 v.0.95, 2011 v.1.9.3
    %li Vielzahl von Implementierungen: MRI, JRuby, BlueRuby, Rubininus, <strike>IronRuby</strike>
    %li ISO-Standardisierung (ISO/IEC 30170)

    / Lesbarkeit, hohes Ziel
%section.slide
  %h2 Features
  %ul
    %li dynamisch typisierte Sprache (Skriptsprache)
    %li Paradigmen: OOP, funktional, prozedural
    %li <em>meta programming</em> &rarr; generische Programmierung
    %li Buzzwords: Reflexion, Mixins/Module, Duck-Typing, Continuations...
    / erlaubt sehr generische und platzsparende Programmierung
    %li
      Ziel: Sprache für Menschen, nicht (nur) Maschinen
      %ul.slide
        %li Wenige Sonderzeichen
        %li
          Sprechende Syntax, z.B.
          =pygmentize "ruby" do
            :plain
              5.times do
                run_program
              end

/ Zu ruby man ebenfalls mehrere Vortraege halten
%section.slide
  = image_tag_with_caption "imgs/rails.png",  "rubyonrails.org", "side-image"
  %h2 Ruby on Rails
  / Etwas ueber Rails sagen: 2006?
  / MVC Web-Framework. Unterst
  %ul
    %li Full-Stack Framework: Webserver, Datenbankabstraktion, Templating, Testframework, Routing
    / Webserver, Templating, Datenbankengine
    %li Konzepte: MVC-Muster, Convention over Configuration
    / was ist CoC, Beispiel, DRY -> Definition der Spalten
    %li Paketverwaltung RubyGems
    / Große Auswahl von Gems in einer aktiven Community -> Github Forks
    %li Testen hoch priorisiert
    / Testen hat in der RoR C einen hohen Stellenwert
    / Testtools liegen schon bei


= render "slides/test.html.haml"
